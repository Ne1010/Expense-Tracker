{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neha\\\\OneDrive\\\\Desktop\\\\Billing-Site\\\\frontend\\\\src\\\\components\\\\HomeScreen.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport ExpenseForm from './ExpenseForm';\nimport './styles.css';\nimport logoImage from '../logo.jpg';\nfunction getCookie(name) {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      if (cookie.startsWith(name + '=')) {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\nconst STATUS_OPTIONS = [['PENDING', 'Pending'], ['SEND_FOR_APPROVAL', 'Sent for Approval'], ['APPROVED', 'Approved'], ['REJECTED', 'Rejected']];\nconst MASTER_GROUPS = [['TRAVEL', 'Travel'], ['OFFICE_SUPPLIES', 'Office Supplies'], ['UTILITIES', 'Utilities']];\nconst CURRENCIES = [['USD', 'USD'], ['EUR', 'EUR'], ['GBP', 'GBP'], ['INR', 'INR']];\nconst SUBGROUPS = {\n  'TRAVEL': [['TICKET', 'Ticket Expense'], ['FOOD', 'Food Expense'], ['HOSPITALITY', 'Hospitality Expense']],\n  'OFFICE_SUPPLIES': [['EQUIPMENT', 'Equipment'], ['STATIONERY', 'Stationery']],\n  'UTILITIES': [['INTERNET', 'Internet'], ['ELECTRICITY', 'Electricity']]\n};\nconst HomeScreen = () => {\n  const navigate = useNavigate();\n  const [expenseTitle, setExpenseTitle] = useState('');\n  const [error, setError] = useState('');\n  const [expenseTitles, setExpenseTitles] = useState([]);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [activeFormId, setActiveFormId] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedTitleId, setSelectedTitleId] = useState(null);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [searchResults, setSearchResults] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [copyModalForTitle, setCopyModalForTitle] = useState(null);\n  const [copyNewTitle, setCopyNewTitle] = useState('');\n  const [copying, setCopying] = useState(false);\n  const [copyError, setCopyError] = useState('');\n  const [showImportModal, setShowImportModal] = useState(false);\n  const [importTitle, setImportTitle] = useState('');\n  const [importFile, setImportFile] = useState(null);\n  const [importError, setImportError] = useState('');\n  const [importing, setImporting] = useState(false);\n\n  // Helper function to determine the overall status of an expense title\n  const getOverallExpenseTitleStatus = titleId => {\n    const titleExpenses = expenses.filter(expense => {\n      var _expense$expense_titl;\n      return ((_expense$expense_titl = expense.expense_title) === null || _expense$expense_titl === void 0 ? void 0 : _expense$expense_titl.id) === titleId;\n    });\n    if (titleExpenses.length === 0) {\n      return 'PENDING'; // Default for titles with no expenses\n    }\n\n    // Prioritize SEND_FOR_APPROVAL > PENDING > REJECTED > APPROVED\n    if (titleExpenses.some(expense => expense.status === 'SEND_FOR_APPROVAL')) {\n      return 'SEND_FOR_APPROVAL';\n    }\n    if (titleExpenses.some(expense => expense.status === 'PENDING')) {\n      return 'PENDING';\n    }\n    if (titleExpenses.some(expense => expense.status === 'REJECTED')) {\n      return 'REJECTED';\n    }\n    return 'APPROVED'; // If no PENDING or REJECTED, all are APPROVED\n  };\n\n  // Unified function to refresh all relevant data\n  const refreshAllData = async () => {\n    await fetchExpenseTitles();\n    await fetchExpenses();\n  };\n  useEffect(() => {\n    const adminStatus = localStorage.getItem('isAdmin') === 'true';\n    setIsAdmin(adminStatus);\n    fetchExpenseTitles();\n    fetchExpenses();\n  }, []);\n  const fetchExpenseTitles = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get('/api/expense-titles/', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setExpenseTitles(response.data);\n    } catch (error) {\n      console.error('Error fetching expense titles:', error);\n      setError('Failed to fetch expense titles. Please refresh the page.');\n    }\n  };\n  const fetchExpenses = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get('/api/expense-forms/', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setExpenses(response.data);\n    } catch (error) {\n      console.error('Error fetching expenses:', error);\n    }\n  };\n  const handleSearch = e => {\n    const query = e.target.value.toLowerCase().trim();\n    setSearchQuery(query);\n    if (!query) {\n      setSearchResults([]);\n      setShowSuggestions(false);\n      return;\n    }\n\n    // Search in expense titles\n    const titleResults = expenseTitles.filter(title => title.title.toLowerCase().includes(query)).map(title => ({\n      type: 'title',\n      id: title.id,\n      title: title.title,\n      displayText: `Title: ${title.title}`\n    }));\n\n    // Search in expenses for status, master group, and subgroup\n    const expenseResults = expenses.filter(expense => {\n      var _MASTER_GROUPS$find, _SUBGROUPS$expense$ma, _SUBGROUPS$expense$ma2, _STATUS_OPTIONS$find, _expense$amount, _expense$date, _expense$currency;\n      const masterGroupMatch = (_MASTER_GROUPS$find = MASTER_GROUPS.find(([value]) => value === expense.master_group)) === null || _MASTER_GROUPS$find === void 0 ? void 0 : _MASTER_GROUPS$find[1].toLowerCase().includes(query);\n      const subgroupMatch = (_SUBGROUPS$expense$ma = SUBGROUPS[expense.master_group]) === null || _SUBGROUPS$expense$ma === void 0 ? void 0 : (_SUBGROUPS$expense$ma2 = _SUBGROUPS$expense$ma.find(([value]) => value === expense.subgroup)) === null || _SUBGROUPS$expense$ma2 === void 0 ? void 0 : _SUBGROUPS$expense$ma2[1].toLowerCase().includes(query);\n      const statusMatch = (_STATUS_OPTIONS$find = STATUS_OPTIONS.find(([value]) => value === expense.status)) === null || _STATUS_OPTIONS$find === void 0 ? void 0 : _STATUS_OPTIONS$find[1].toLowerCase().includes(query);\n      const amountMatch = (_expense$amount = expense.amount) === null || _expense$amount === void 0 ? void 0 : _expense$amount.toString().includes(query);\n      const dateMatch = (_expense$date = expense.date) === null || _expense$date === void 0 ? void 0 : _expense$date.toLowerCase().includes(query);\n      const currencyMatch = (_expense$currency = expense.currency) === null || _expense$currency === void 0 ? void 0 : _expense$currency.toLowerCase().includes(query);\n      return masterGroupMatch || subgroupMatch || statusMatch || amountMatch || dateMatch || currencyMatch;\n    }).map(expense => {\n      var _STATUS_OPTIONS$find2, _MASTER_GROUPS$find2, _SUBGROUPS$expense$ma3, _SUBGROUPS$expense$ma4, _expense$expense_titl3;\n      const title = expenseTitles.find(t => {\n        var _expense$expense_titl2;\n        return t.id === ((_expense$expense_titl2 = expense.expense_title) === null || _expense$expense_titl2 === void 0 ? void 0 : _expense$expense_titl2.id);\n      });\n      const statusLabel = (_STATUS_OPTIONS$find2 = STATUS_OPTIONS.find(([value]) => value === expense.status)) === null || _STATUS_OPTIONS$find2 === void 0 ? void 0 : _STATUS_OPTIONS$find2[1];\n      const masterGroupLabel = (_MASTER_GROUPS$find2 = MASTER_GROUPS.find(([value]) => value === expense.master_group)) === null || _MASTER_GROUPS$find2 === void 0 ? void 0 : _MASTER_GROUPS$find2[1];\n      const subgroupLabel = (_SUBGROUPS$expense$ma3 = SUBGROUPS[expense.master_group]) === null || _SUBGROUPS$expense$ma3 === void 0 ? void 0 : (_SUBGROUPS$expense$ma4 = _SUBGROUPS$expense$ma3.find(([value]) => value === expense.subgroup)) === null || _SUBGROUPS$expense$ma4 === void 0 ? void 0 : _SUBGROUPS$expense$ma4[1];\n      return {\n        type: 'expense',\n        id: expense.id,\n        titleId: (_expense$expense_titl3 = expense.expense_title) === null || _expense$expense_titl3 === void 0 ? void 0 : _expense$expense_titl3.id,\n        displayText: `${(title === null || title === void 0 ? void 0 : title.title) || 'Unknown Title'} - ${masterGroupLabel} - ${subgroupLabel} (${statusLabel}) - ${expense.amount} ${expense.currency}`\n      };\n    });\n\n    // Combine and deduplicate results\n    const combinedResults = [...titleResults, ...expenseResults];\n    const uniqueResults = Array.from(new Map(combinedResults.map(item => [item.id, item])).values());\n    setSearchResults(uniqueResults);\n    setShowSuggestions(true);\n  };\n  const handleSearchBlur = () => {\n    setTimeout(() => {\n      setShowSuggestions(false);\n    }, 200);\n  };\n  const handleSuggestionClick = result => {\n    if (result.type === 'title') {\n      setSelectedTitleId(result.id);\n    } else {\n      setSelectedTitleId(result.titleId);\n    }\n    setSearchQuery('');\n    setShowSuggestions(false);\n    navigate('/details', {\n      state: {\n        selectedTitleId: result.type === 'title' ? result.id : result.titleId\n      }\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    if (!expenseTitle.trim()) {\n      setError('Please fill in the expense title');\n      return;\n    }\n    const csrftoken = getCookie('csrftoken');\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('Authentication token not found. Please login again.');\n      return;\n    }\n    try {\n      const titleResponse = await axios.post('/api/expense-titles/', {\n        title: expenseTitle\n      }, {\n        headers: {\n          'X-CSRFToken': csrftoken,\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!titleResponse.data || !titleResponse.data.id) {\n        throw new Error('Failed to create expense title');\n      }\n      const newTitleId = titleResponse.data.id;\n      setExpenseTitle('');\n      // Immediately navigate to DetailsScreen with the new title ID\n      navigate('/details', {\n        state: {\n          selectedTitleId: newTitleId\n        }\n      });\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error('Error creating expense:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error);\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Failed to create expense. Please try again.');\n    }\n  };\n  const handleAddForm = titleId => {\n    setActiveFormId(titleId);\n  };\n  const handleCloseForm = async () => {\n    setActiveFormId(null);\n    await refreshAllData();\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('isAdmin');\n    localStorage.removeItem('username');\n    navigate('/login');\n  };\n  const handleTitleSelect = titleId => {\n    setSelectedTitleId(titleId);\n    navigate('/details', {\n      state: {\n        selectedTitleId: titleId\n      }\n    });\n  };\n  const handleImportFile = async () => {\n    if (!importTitle.trim() || !importFile) {\n      setImportError('Please provide a title and select a file.');\n      return;\n    }\n    setImporting(true);\n    setImportError('');\n    const reader = new FileReader();\n    reader.onload = async event => {\n      try {\n        const fileContent = event.target.result;\n        const fileType = importFile.name.split('.').pop().toLowerCase();\n        let rawExpenses = [];\n        if (fileType === 'json') {\n          const data = JSON.parse(fileContent);\n          if (!data.expenses || !Array.isArray(data.expenses)) {\n            throw new Error('Invalid JSON format. Expected an object with an \"expenses\" array.');\n          }\n          rawExpenses = data.expenses.map(exp => ({\n            'Master Group': exp.master_group,\n            'Subgroup': exp.subgroup,\n            'Currency': exp.currency,\n            'Amount': exp.amount,\n            'Date': exp.date\n          }));\n        } else if (fileType === 'xml') {\n          const parser = new DOMParser();\n          const xmlDoc = parser.parseFromString(fileContent, \"application/xml\");\n          const expenseNodes = xmlDoc.getElementsByTagName('expense');\n          rawExpenses = Array.from(expenseNodes).map(node => {\n            const getTagValue = tagName => {\n              var _node$getElementsByTa;\n              return ((_node$getElementsByTa = node.getElementsByTagName(tagName)[0]) === null || _node$getElementsByTa === void 0 ? void 0 : _node$getElementsByTa.textContent) || '';\n            };\n            return {\n              'Master Group': getTagValue('master_group'),\n              'Subgroup': getTagValue('subgroup'),\n              'Currency': getTagValue('currency'),\n              'Amount': getTagValue('amount'),\n              'Date': getTagValue('date')\n            };\n          });\n        } else if (fileType === 'csv' || fileType === 'xlsx') {\n          const XLSX = await import('xlsx');\n          const workbook = XLSX.read(fileContent, {\n            type: fileType === 'csv' ? 'string' : 'binary'\n          });\n          const sheetName = workbook.SheetNames[0];\n          rawExpenses = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName]);\n        } else {\n          throw new Error('Unsupported file type.');\n        }\n        const transformImportedData = data => {\n          return data.map(item => {\n            var _MASTER_GROUPS$find3, _SUBGROUPS$masterGrou, _SUBGROUPS$masterGrou2;\n            const masterGroupValue = (_MASTER_GROUPS$find3 = MASTER_GROUPS.find(g => g[1] === item['Master Group'])) === null || _MASTER_GROUPS$find3 === void 0 ? void 0 : _MASTER_GROUPS$find3[0];\n            if (!masterGroupValue) return null;\n            const subgroupValue = (_SUBGROUPS$masterGrou = SUBGROUPS[masterGroupValue]) === null || _SUBGROUPS$masterGrou === void 0 ? void 0 : (_SUBGROUPS$masterGrou2 = _SUBGROUPS$masterGrou.find(sg => sg[1] === item['Subgroup'])) === null || _SUBGROUPS$masterGrou2 === void 0 ? void 0 : _SUBGROUPS$masterGrou2[0];\n            if (!subgroupValue) return null;\n            return {\n              master_group: masterGroupValue,\n              subgroup: subgroupValue,\n              currency: item['Currency'] || item['currency'],\n              amount: item['Amount'] || item['amount'],\n              date: item['Date'] ? new Date(item['Date']).toISOString().split('T')[0] : new Date().toISOString().split('T')[0]\n            };\n          }).filter(Boolean);\n        };\n        const transformedExpenses = transformImportedData(rawExpenses);\n        if (transformedExpenses.length === 0) {\n          throw new Error('No valid expense data found in the file or data is malformed.');\n        }\n        const token = localStorage.getItem('token');\n        const csrftoken = getCookie('csrftoken');\n        const headers = {\n          'X-CSRFToken': csrftoken,\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        };\n        const titleResponse = await axios.post('/api/expense-titles/', {\n          title: importTitle.trim()\n        }, {\n          headers\n        });\n        const newTitleId = titleResponse.data.id;\n        const creationPromises = transformedExpenses.map(expenseData => {\n          const payload = {\n            ...expenseData,\n            expense_title_id: newTitleId,\n            status: 'PENDING',\n            comments: ''\n          };\n          return axios.post('/api/expense-forms/', payload, {\n            headers\n          });\n        });\n        await Promise.all(creationPromises);\n        setShowImportModal(false);\n        setImportTitle('');\n        setImportFile(null);\n        navigate('/details', {\n          state: {\n            selectedTitleId: newTitleId\n          }\n        });\n      } catch (error) {\n        console.error('Import error:', error);\n        setImportError(error.message || 'Failed to import expenses.');\n      } finally {\n        setImporting(false);\n      }\n    };\n    reader.onerror = () => {\n      setImportError('Failed to read the file.');\n      setImporting(false);\n    };\n    const fileType = importFile.name.split('.').pop().toLowerCase();\n    if (fileType === 'csv' || fileType === 'json' || fileType === 'xml') {\n      reader.readAsText(importFile);\n    } else if (fileType === 'xlsx') {\n      reader.readAsBinaryString(importFile);\n    } else {\n      setImportError('Unsupported file type.');\n      setImporting(false);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-title-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImage,\n    alt: \"Logo\",\n    className: \"logo-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 11\n    }\n  }, \"Expense Details\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search by title, status, master group, subgroup, amount, date, or currency...\",\n    value: searchQuery,\n    onChange: handleSearch,\n    onFocus: () => searchQuery.trim() && setShowSuggestions(true),\n    onBlur: handleSearchBlur,\n    className: \"search-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 13\n    }\n  }), showSuggestions && searchQuery.trim() && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-suggestions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 15\n    }\n  }, searchResults.length > 0 ? searchResults.map(result => /*#__PURE__*/React.createElement(\"div\", {\n    key: `${result.type}-${result.id}`,\n    className: \"suggestion-item\",\n    onClick: () => handleSuggestionClick(result),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 21\n    }\n  }, result.displayText)) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"no-results\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 19\n    }\n  }, \"No matching results found\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logout-btn-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLogout,\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 11\n    }\n  }, \"Logout\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }\n  }, error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 19\n    }\n  }, error), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"expenseTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 13\n    }\n  }, \"New Expense Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"expenseTitle\",\n    value: expenseTitle,\n    onChange: e => setExpenseTitle(e.target.value),\n    required: true,\n    placeholder: \"Enter new expense title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title-action-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-add\",\n    disabled: !expenseTitle.trim(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 15\n    }\n  }, \"Add Title\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-import\",\n    onClick: () => setShowImportModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 15\n    }\n  }, \"Import\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"expense-titles-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 11\n    }\n  }, \"Expense Titles\"), expenseTitles.sort((a, b) => {\n    const statusA = getOverallExpenseTitleStatus(a.id);\n    const statusB = getOverallExpenseTitleStatus(b.id);\n    const statusOrder = {\n      'PENDING': 1,\n      'REJECTED': 2,\n      'APPROVED': 3\n    };\n    if (statusOrder[statusA] !== statusOrder[statusB]) {\n      return statusOrder[statusA] - statusOrder[statusB];\n    } else {\n      return new Date(b.created_at) - new Date(a.created_at);\n    }\n  }).map(title => {\n    var _STATUS_OPTIONS$find3;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: title.id,\n      className: `expense-item ${selectedTitleId === title.id ? 'selected' : ''}`,\n      onClick: () => handleTitleSelect(title.id),\n      style: {\n        cursor: 'pointer',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 15\n      }\n    }, title.title), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: '0.5rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"status-badge\",\n      \"data-status\": getOverallExpenseTitleStatus(title.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 17\n      }\n    }, (_STATUS_OPTIONS$find3 = STATUS_OPTIONS.find(([value]) => value === getOverallExpenseTitleStatus(title.id))) === null || _STATUS_OPTIONS$find3 === void 0 ? void 0 : _STATUS_OPTIONS$find3[1]), !isAdmin && getOverallExpenseTitleStatus(title.id) === 'PENDING' && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-secondary\",\n      style: {\n        marginLeft: '0.5rem',\n        background: '#888',\n        color: '#fff'\n      },\n      onClick: async e => {\n        e.stopPropagation();\n        try {\n          const token = localStorage.getItem('token');\n          const csrftoken = getCookie('csrftoken');\n          // Find the first expense form for this title\n          const expenseForm = expenses.find(exp => {\n            var _exp$expense_title;\n            return ((_exp$expense_title = exp.expense_title) === null || _exp$expense_title === void 0 ? void 0 : _exp$expense_title.id) === title.id;\n          });\n          if (!expenseForm) {\n            setError('No expense form found to send for approval.');\n            return;\n          }\n          await axios.post(`/api/expense-forms/${expenseForm.id}/send_for_approval/`, {}, {\n            headers: {\n              'X-CSRFToken': csrftoken,\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          await refreshAllData();\n        } catch (err) {\n          setError('Failed to send for approval. Please try again.');\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 19\n      }\n    }, \"Send for Approval\"), !isAdmin && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-copy\",\n      style: {\n        marginLeft: '0.5rem'\n      },\n      onClick: e => {\n        e.stopPropagation();\n        setCopyModalForTitle(title.id);\n        setCopyNewTitle('');\n        setCopyError('');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 19\n      }\n    }, \"\\uD83D\\uDCCB Copy\")));\n  }))), copyModalForTitle && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status-message-callout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"callout-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 13\n    }\n  }, \"Copy Expense\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 15\n    }\n  }, \"New Expense Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: copyNewTitle,\n    onChange: e => setCopyNewTitle(e.target.value),\n    placeholder: \"Enter new expense title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 15\n    }\n  })), copyError && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 27\n    }\n  }, copyError), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-actions\",\n    style: {\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: async () => {\n      if (!copyNewTitle.trim()) {\n        setCopyError('Please enter a new title');\n        return;\n      }\n      setCopying(true);\n      setCopyError('');\n      let failedForms = [];\n      try {\n        const token = localStorage.getItem('token');\n        const csrftoken = getCookie('csrftoken');\n        // 1. Create new title\n        const titleResponse = await axios.post('/api/expense-titles/', {\n          title: copyNewTitle.trim()\n        }, {\n          headers: {\n            'X-CSRFToken': csrftoken,\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        const newTitleId = titleResponse.data.id;\n        // 2. Get all forms from source title\n        const sourceForms = expenses.filter(exp => {\n          var _exp$expense_title2;\n          return ((_exp$expense_title2 = exp.expense_title) === null || _exp$expense_title2 === void 0 ? void 0 : _exp$expense_title2.id) === copyModalForTitle;\n        });\n        // 3. Copy all forms to new title, including attachments\n        await Promise.all(sourceForms.map(async form => {\n          const formData = new FormData();\n          formData.append('master_group', form.master_group);\n          formData.append('subgroup', form.subgroup);\n          formData.append('amount', form.amount);\n          formData.append('currency', form.currency);\n          formData.append('date', form.date);\n          formData.append('expense_title_id', newTitleId);\n          formData.append('status', 'PENDING');\n          formData.append('comments', '');\n          let attachmentSuccess = 0;\n          if (form.attachments && form.attachments.length > 0) {\n            await Promise.all(form.attachments.map(async att => {\n              try {\n                // Use backend proxy endpoint instead of direct OneDrive URL\n                const originalFileName = att.url.split('/').pop();\n                const safeFilename = encodeURIComponent(originalFileName);\n                const safeTitle = encodeURIComponent(form.expense_title.title || '');\n                const downloadUrl = `/api/attachments/${safeTitle}/${safeFilename}`;\n                const response = await fetch(downloadUrl, {\n                  method: 'GET',\n                  headers: {\n                    Authorization: `Token ${token}`\n                  },\n                  credentials: 'include'\n                });\n                if (!response.ok) throw new Error('Attachment download failed from backend');\n                const blob = await response.blob();\n                formData.append('attachments', blob, originalFileName);\n                attachmentSuccess++;\n              } catch (err) {\n                console.error('Failed to copy attachment:', err);\n              }\n            }));\n          }\n          // If there were attachments but all failed, record this form\n          if (form.attachments && form.attachments.length > 0 && attachmentSuccess === 0) {\n            failedForms.push(form);\n          }\n          // Submit the form with (possibly partial) attachments\n          await axios.post('/api/expense-forms/', formData, {\n            headers: {\n              'X-CSRFToken': csrftoken,\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n        }));\n        setCopyModalForTitle(null);\n        setCopyNewTitle('');\n        setCopyError(failedForms.length > 0 ? `Some forms were copied without attachments due to download errors. (${failedForms.length} forms affected)` : '');\n        setCopying(false);\n        navigate('/details', {\n          state: {\n            selectedTitleId: newTitleId\n          }\n        });\n      } catch (error) {\n        console.error('Copy error:', error);\n        setCopyError('Failed to copy expense. Please try again.');\n        setCopying(false);\n      }\n    },\n    disabled: copying || !copyNewTitle.trim(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 15\n    }\n  }, copying ? 'Copying...' : 'Copy Expense'), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary\",\n    onClick: () => {\n      setCopyModalForTitle(null);\n      setCopyNewTitle('');\n      setCopyError('');\n    },\n    disabled: copying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 15\n    }\n  }, \"Cancel\")))), showImportModal && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 13\n    }\n  }, \"Import Expenses from File\"), importError && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 29\n    }\n  }, importError), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 15\n    }\n  }, \"New Expense Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: importTitle,\n    onChange: e => setImportTitle(e.target.value),\n    placeholder: \"Enter title for imported expenses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 15\n    }\n  }, \"Select File to Import\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"file-input\",\n    accept: \".csv,.xlsx,.json,.xml\",\n    onChange: e => setImportFile(e.target.files[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: handleImportFile,\n    disabled: importing || !importTitle.trim() || !importFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 15\n    }\n  }, importing ? 'Importing...' : 'Import'), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary\",\n    onClick: () => {\n      setShowImportModal(false);\n      setImportTitle('');\n      setImportFile(null);\n      setImportError('');\n    },\n    disabled: importing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 15\n    }\n  }, \"Cancel\")))));\n};\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","ExpenseForm","logoImage","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","startsWith","decodeURIComponent","substring","STATUS_OPTIONS","MASTER_GROUPS","CURRENCIES","SUBGROUPS","HomeScreen","navigate","expenseTitle","setExpenseTitle","error","setError","expenseTitles","setExpenseTitles","isAdmin","setIsAdmin","activeFormId","setActiveFormId","searchQuery","setSearchQuery","selectedTitleId","setSelectedTitleId","showSuggestions","setShowSuggestions","searchResults","setSearchResults","expenses","setExpenses","copyModalForTitle","setCopyModalForTitle","copyNewTitle","setCopyNewTitle","copying","setCopying","copyError","setCopyError","showImportModal","setShowImportModal","importTitle","setImportTitle","importFile","setImportFile","importError","setImportError","importing","setImporting","getOverallExpenseTitleStatus","titleId","titleExpenses","filter","expense","_expense$expense_titl","expense_title","id","some","status","refreshAllData","fetchExpenseTitles","fetchExpenses","adminStatus","localStorage","getItem","token","response","get","headers","data","console","handleSearch","e","query","target","value","toLowerCase","titleResults","title","includes","map","type","displayText","expenseResults","_MASTER_GROUPS$find","_SUBGROUPS$expense$ma","_SUBGROUPS$expense$ma2","_STATUS_OPTIONS$find","_expense$amount","_expense$date","_expense$currency","masterGroupMatch","find","master_group","subgroupMatch","subgroup","statusMatch","amountMatch","amount","toString","dateMatch","date","currencyMatch","currency","_STATUS_OPTIONS$find2","_MASTER_GROUPS$find2","_SUBGROUPS$expense$ma3","_SUBGROUPS$expense$ma4","_expense$expense_titl3","t","_expense$expense_titl2","statusLabel","masterGroupLabel","subgroupLabel","combinedResults","uniqueResults","Array","from","Map","item","values","handleSearchBlur","setTimeout","handleSuggestionClick","result","state","handleSubmit","preventDefault","csrftoken","titleResponse","post","Error","newTitleId","_error$response","_error$response2","_error$response2$data","detail","handleAddForm","handleCloseForm","handleLogout","removeItem","handleTitleSelect","handleImportFile","reader","FileReader","onload","event","fileContent","fileType","pop","rawExpenses","JSON","parse","isArray","exp","parser","DOMParser","xmlDoc","parseFromString","expenseNodes","getElementsByTagName","node","getTagValue","tagName","_node$getElementsByTa","textContent","XLSX","workbook","read","sheetName","SheetNames","utils","sheet_to_json","Sheets","transformImportedData","_MASTER_GROUPS$find3","_SUBGROUPS$masterGrou","_SUBGROUPS$masterGrou2","masterGroupValue","g","subgroupValue","sg","Date","toISOString","Boolean","transformedExpenses","creationPromises","expenseData","payload","expense_title_id","comments","Promise","all","message","onerror","readAsText","readAsBinaryString","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","placeholder","onChange","onFocus","onBlur","key","onClick","onSubmit","htmlFor","required","disabled","sort","a","b","statusA","statusB","statusOrder","created_at","_STATUS_OPTIONS$find3","style","cursor","display","justifyContent","alignItems","gap","marginLeft","background","color","stopPropagation","expenseForm","_exp$expense_title","err","width","failedForms","sourceForms","_exp$expense_title2","form","formData","FormData","append","attachmentSuccess","attachments","att","originalFileName","url","safeFilename","encodeURIComponent","safeTitle","downloadUrl","fetch","method","Authorization","credentials","ok","blob","push","accept","files"],"sources":["C:/Users/Neha/OneDrive/Desktop/Billing-Site/frontend/src/components/HomeScreen.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './styles.css';\r\nimport logoImage from '../logo.jpg';\r\n\r\nfunction getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            if (cookie.startsWith(name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nconst STATUS_OPTIONS = [\r\n  ['PENDING', 'Pending'],\r\n  ['SEND_FOR_APPROVAL', 'Sent for Approval'],\r\n  ['APPROVED', 'Approved'],\r\n  ['REJECTED', 'Rejected']\r\n];\r\n\r\nconst MASTER_GROUPS = [\r\n  ['TRAVEL', 'Travel'],\r\n  ['OFFICE_SUPPLIES', 'Office Supplies'],\r\n  ['UTILITIES', 'Utilities'],\r\n];\r\n\r\nconst CURRENCIES = [\r\n  ['USD', 'USD'],\r\n  ['EUR', 'EUR'],\r\n  ['GBP', 'GBP'],\r\n  ['INR', 'INR'],\r\n];\r\n\r\nconst SUBGROUPS = {\r\n  'TRAVEL': [\r\n    ['TICKET', 'Ticket Expense'],\r\n    ['FOOD', 'Food Expense'],\r\n    ['HOSPITALITY', 'Hospitality Expense'],\r\n  ],\r\n  'OFFICE_SUPPLIES': [\r\n    ['EQUIPMENT', 'Equipment'],\r\n    ['STATIONERY', 'Stationery'],\r\n  ],\r\n  'UTILITIES': [\r\n    ['INTERNET', 'Internet'],\r\n    ['ELECTRICITY', 'Electricity'],\r\n  ],\r\n};\r\n\r\nconst HomeScreen = () => {\r\n  const navigate = useNavigate();\r\n  const [expenseTitle, setExpenseTitle] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [expenseTitles, setExpenseTitles] = useState([]);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [activeFormId, setActiveFormId] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [selectedTitleId, setSelectedTitleId] = useState(null);\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [copyModalForTitle, setCopyModalForTitle] = useState(null);\r\n  const [copyNewTitle, setCopyNewTitle] = useState('');\r\n  const [copying, setCopying] = useState(false);\r\n  const [copyError, setCopyError] = useState('');\r\n  const [showImportModal, setShowImportModal] = useState(false);\r\n  const [importTitle, setImportTitle] = useState('');\r\n  const [importFile, setImportFile] = useState(null);\r\n  const [importError, setImportError] = useState('');\r\n  const [importing, setImporting] = useState(false);\r\n\r\n  // Helper function to determine the overall status of an expense title\r\n  const getOverallExpenseTitleStatus = (titleId) => {\r\n    const titleExpenses = expenses.filter(expense =>\r\n      expense.expense_title?.id === titleId\r\n    );\r\n\r\n    if (titleExpenses.length === 0) {\r\n      return 'PENDING'; // Default for titles with no expenses\r\n    }\r\n\r\n    // Prioritize SEND_FOR_APPROVAL > PENDING > REJECTED > APPROVED\r\n    if (titleExpenses.some(expense => expense.status === 'SEND_FOR_APPROVAL')) {\r\n      return 'SEND_FOR_APPROVAL';\r\n    }\r\n    if (titleExpenses.some(expense => expense.status === 'PENDING')) {\r\n      return 'PENDING';\r\n    }\r\n    if (titleExpenses.some(expense => expense.status === 'REJECTED')) {\r\n      return 'REJECTED';\r\n    }\r\n    return 'APPROVED'; // If no PENDING or REJECTED, all are APPROVED\r\n  };\r\n\r\n  // Unified function to refresh all relevant data\r\n  const refreshAllData = async () => {\r\n    await fetchExpenseTitles();\r\n    await fetchExpenses();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const adminStatus = localStorage.getItem('isAdmin') === 'true';\r\n    setIsAdmin(adminStatus);\r\n    fetchExpenseTitles();\r\n    fetchExpenses();\r\n  }, []);\r\n\r\n  const fetchExpenseTitles = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get('/api/expense-titles/', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      setExpenseTitles(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching expense titles:', error);\r\n      setError('Failed to fetch expense titles. Please refresh the page.');\r\n    }\r\n  };\r\n\r\n  const fetchExpenses = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get('/api/expense-forms/', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      setExpenses(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching expenses:', error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    const query = e.target.value.toLowerCase().trim();\r\n    setSearchQuery(query);\r\n    \r\n    if (!query) {\r\n      setSearchResults([]);\r\n      setShowSuggestions(false);\r\n      return;\r\n    }\r\n\r\n    // Search in expense titles\r\n    const titleResults = expenseTitles.filter(title =>\r\n      title.title.toLowerCase().includes(query)\r\n    ).map(title => ({\r\n      type: 'title',\r\n      id: title.id,\r\n      title: title.title,\r\n      displayText: `Title: ${title.title}`\r\n    }));\r\n\r\n    // Search in expenses for status, master group, and subgroup\r\n    const expenseResults = expenses.filter(expense => {\r\n      const masterGroupMatch = MASTER_GROUPS.find(([value]) => \r\n        value === expense.master_group\r\n      )?.[1].toLowerCase().includes(query);\r\n      \r\n      const subgroupMatch = SUBGROUPS[expense.master_group]?.find(([value]) => \r\n        value === expense.subgroup\r\n      )?.[1].toLowerCase().includes(query);\r\n      \r\n      const statusMatch = STATUS_OPTIONS.find(([value]) => \r\n        value === expense.status\r\n      )?.[1].toLowerCase().includes(query);\r\n\r\n      const amountMatch = expense.amount?.toString().includes(query);\r\n      const dateMatch = expense.date?.toLowerCase().includes(query);\r\n      const currencyMatch = expense.currency?.toLowerCase().includes(query);\r\n\r\n      return masterGroupMatch || subgroupMatch || statusMatch || amountMatch || dateMatch || currencyMatch;\r\n    }).map(expense => {\r\n      const title = expenseTitles.find(t => t.id === expense.expense_title?.id);\r\n      const statusLabel = STATUS_OPTIONS.find(([value]) => value === expense.status)?.[1];\r\n      const masterGroupLabel = MASTER_GROUPS.find(([value]) => value === expense.master_group)?.[1];\r\n      const subgroupLabel = SUBGROUPS[expense.master_group]?.find(([value]) => value === expense.subgroup)?.[1];\r\n      \r\n      return {\r\n        type: 'expense',\r\n        id: expense.id,\r\n        titleId: expense.expense_title?.id,\r\n        displayText: `${title?.title || 'Unknown Title'} - ${masterGroupLabel} - ${subgroupLabel} (${statusLabel}) - ${expense.amount} ${expense.currency}`\r\n      };\r\n    });\r\n\r\n    // Combine and deduplicate results\r\n    const combinedResults = [...titleResults, ...expenseResults];\r\n    const uniqueResults = Array.from(\r\n      new Map(combinedResults.map(item => [item.id, item])).values()\r\n    );\r\n\r\n    setSearchResults(uniqueResults);\r\n    setShowSuggestions(true);\r\n  };\r\n\r\n  const handleSearchBlur = () => {\r\n    setTimeout(() => {\r\n      setShowSuggestions(false);\r\n    }, 200);\r\n  };\r\n\r\n  const handleSuggestionClick = (result) => {\r\n    if (result.type === 'title') {\r\n      setSelectedTitleId(result.id);\r\n    } else {\r\n      setSelectedTitleId(result.titleId);\r\n    }\r\n    setSearchQuery('');\r\n    setShowSuggestions(false);\r\n    navigate('/details', { state: { selectedTitleId: result.type === 'title' ? result.id : result.titleId } });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    if (!expenseTitle.trim()) {\r\n      setError('Please fill in the expense title');\r\n      return;\r\n    }\r\n\r\n    const csrftoken = getCookie('csrftoken');\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      setError('Authentication token not found. Please login again.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const titleResponse = await axios.post('/api/expense-titles/', {\r\n        title: expenseTitle\r\n      }, {\r\n        headers: {\r\n          'X-CSRFToken': csrftoken,\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n\r\n      if (!titleResponse.data || !titleResponse.data.id) {\r\n        throw new Error('Failed to create expense title');\r\n      }\r\n\r\n      const newTitleId = titleResponse.data.id;\r\n\r\n      setExpenseTitle('');\r\n      // Immediately navigate to DetailsScreen with the new title ID\r\n      navigate('/details', { state: { selectedTitleId: newTitleId } });\r\n    } catch (error) {\r\n      console.error('Error creating expense:', error.response?.data || error);\r\n      setError(error.response?.data?.detail || 'Failed to create expense. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleAddForm = (titleId) => {\r\n    setActiveFormId(titleId);\r\n  };\r\n\r\n  const handleCloseForm = async () => {\r\n    setActiveFormId(null);\r\n    await refreshAllData();\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('isAdmin');\r\n    localStorage.removeItem('username');\r\n    navigate('/login');\r\n  };\r\n\r\n  const handleTitleSelect = (titleId) => {\r\n    setSelectedTitleId(titleId);\r\n    navigate('/details', { state: { selectedTitleId: titleId } });\r\n  };\r\n\r\n  const handleImportFile = async () => {\r\n    if (!importTitle.trim() || !importFile) {\r\n      setImportError('Please provide a title and select a file.');\r\n      return;\r\n    }\r\n\r\n    setImporting(true);\r\n    setImportError('');\r\n\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = async (event) => {\r\n      try {\r\n        const fileContent = event.target.result;\r\n        const fileType = importFile.name.split('.').pop().toLowerCase();\r\n        let rawExpenses = [];\r\n\r\n        if (fileType === 'json') {\r\n          const data = JSON.parse(fileContent);\r\n          if (!data.expenses || !Array.isArray(data.expenses)) {\r\n            throw new Error('Invalid JSON format. Expected an object with an \"expenses\" array.');\r\n          }\r\n          rawExpenses = data.expenses.map(exp => ({\r\n            'Master Group': exp.master_group,\r\n            'Subgroup': exp.subgroup,\r\n            'Currency': exp.currency,\r\n            'Amount': exp.amount,\r\n            'Date': exp.date,\r\n          }));\r\n        } else if (fileType === 'xml') {\r\n          const parser = new DOMParser();\r\n          const xmlDoc = parser.parseFromString(fileContent, \"application/xml\");\r\n          const expenseNodes = xmlDoc.getElementsByTagName('expense');\r\n          rawExpenses = Array.from(expenseNodes).map(node => {\r\n            const getTagValue = (tagName) => node.getElementsByTagName(tagName)[0]?.textContent || '';\r\n            return {\r\n              'Master Group': getTagValue('master_group'),\r\n              'Subgroup': getTagValue('subgroup'),\r\n              'Currency': getTagValue('currency'),\r\n              'Amount': getTagValue('amount'),\r\n              'Date': getTagValue('date'),\r\n            };\r\n          });\r\n        } else if (fileType === 'csv' || fileType === 'xlsx') {\r\n          const XLSX = await import('xlsx');\r\n          const workbook = XLSX.read(fileContent, { type: fileType === 'csv' ? 'string' : 'binary' });\r\n          const sheetName = workbook.SheetNames[0];\r\n          rawExpenses = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName]);\r\n        } else {\r\n          throw new Error('Unsupported file type.');\r\n        }\r\n\r\n        const transformImportedData = (data) => {\r\n          return data.map(item => {\r\n            const masterGroupValue = MASTER_GROUPS.find(g => g[1] === item['Master Group'])?.[0];\r\n            if (!masterGroupValue) return null;\r\n\r\n            const subgroupValue = SUBGROUPS[masterGroupValue]?.find(sg => sg[1] === item['Subgroup'])?.[0];\r\n            if (!subgroupValue) return null;\r\n            \r\n            return {\r\n              master_group: masterGroupValue,\r\n              subgroup: subgroupValue,\r\n              currency: item['Currency'] || item['currency'],\r\n              amount: item['Amount'] || item['amount'],\r\n              date: item['Date'] ? new Date(item['Date']).toISOString().split('T')[0] : new Date().toISOString().split('T')[0],\r\n            };\r\n          }).filter(Boolean);\r\n        };\r\n\r\n        const transformedExpenses = transformImportedData(rawExpenses);\r\n\r\n        if (transformedExpenses.length === 0) {\r\n          throw new Error('No valid expense data found in the file or data is malformed.');\r\n        }\r\n\r\n        const token = localStorage.getItem('token');\r\n        const csrftoken = getCookie('csrftoken');\r\n        const headers = {\r\n          'X-CSRFToken': csrftoken,\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        };\r\n\r\n        const titleResponse = await axios.post('/api/expense-titles/', { title: importTitle.trim() }, { headers });\r\n        const newTitleId = titleResponse.data.id;\r\n\r\n        const creationPromises = transformedExpenses.map(expenseData => {\r\n          const payload = {\r\n            ...expenseData,\r\n            expense_title_id: newTitleId,\r\n            status: 'PENDING',\r\n            comments: ''\r\n          };\r\n          return axios.post('/api/expense-forms/', payload, { headers });\r\n        });\r\n\r\n        await Promise.all(creationPromises);\r\n\r\n        setShowImportModal(false);\r\n        setImportTitle('');\r\n        setImportFile(null);\r\n        navigate('/details', { state: { selectedTitleId: newTitleId } });\r\n\r\n      } catch (error) {\r\n        console.error('Import error:', error);\r\n        setImportError(error.message || 'Failed to import expenses.');\r\n      } finally {\r\n        setImporting(false);\r\n      }\r\n    };\r\n\r\n    reader.onerror = () => {\r\n      setImportError('Failed to read the file.');\r\n      setImporting(false);\r\n    };\r\n\r\n    const fileType = importFile.name.split('.').pop().toLowerCase();\r\n    if (fileType === 'csv' || fileType === 'json' || fileType === 'xml') {\r\n      reader.readAsText(importFile);\r\n    } else if (fileType === 'xlsx') {\r\n      reader.readAsBinaryString(importFile);\r\n    } else {\r\n      setImportError('Unsupported file type.');\r\n      setImporting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"app-title-bar\">\r\n        <div className=\"logo-container\">\r\n          <img src={logoImage} alt=\"Logo\" className=\"logo-img\" />\r\n          <span className=\"title\">Expense Details</span>\r\n        </div>\r\n        <div className=\"search-wrapper\">\r\n          <div className=\"search-container\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by title, status, master group, subgroup, amount, date, or currency...\"\r\n              value={searchQuery}\r\n              onChange={handleSearch}\r\n              onFocus={() => searchQuery.trim() && setShowSuggestions(true)}\r\n              onBlur={handleSearchBlur}\r\n              className=\"search-input\"\r\n            />\r\n            {showSuggestions && searchQuery.trim() && (\r\n              <div className=\"search-suggestions\">\r\n                {searchResults.length > 0 ? (\r\n                  searchResults.map((result) => (\r\n                    <div\r\n                      key={`${result.type}-${result.id}`}\r\n                      className=\"suggestion-item\"\r\n                      onClick={() => handleSuggestionClick(result)}\r\n                    >\r\n                      {result.displayText}\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <div className=\"no-results\">No matching results found</div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"logout-btn-wrapper\">\r\n          <button onClick={handleLogout} className=\"btn\">Logout</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card\">\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"expenseTitle\">New Expense Title</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"expenseTitle\"\r\n              value={expenseTitle}\r\n              onChange={(e) => setExpenseTitle(e.target.value)}\r\n              required\r\n              placeholder=\"Enter new expense title\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"title-action-buttons\">\r\n              <button \r\n                type=\"submit\" \r\n                className=\"btn btn-add\"\r\n                disabled={!expenseTitle.trim()}\r\n              >\r\n                Add Title\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-import\"\r\n                onClick={() => setShowImportModal(true)}\r\n              >\r\n                Import\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"expense-titles-container\">\r\n        <div className=\"card\">\r\n          <h3>Expense Titles</h3>\r\n          {expenseTitles\r\n            .sort((a, b) => {\r\n              const statusA = getOverallExpenseTitleStatus(a.id);\r\n              const statusB = getOverallExpenseTitleStatus(b.id);\r\n              const statusOrder = { 'PENDING': 1, 'REJECTED': 2, 'APPROVED': 3 };\r\n              if (statusOrder[statusA] !== statusOrder[statusB]) {\r\n                return statusOrder[statusA] - statusOrder[statusB];\r\n              } else {\r\n                return new Date(b.created_at) - new Date(a.created_at);\r\n              }\r\n            })\r\n            .map((title) => (\r\n            <div\r\n              key={title.id}\r\n              className={`expense-item ${selectedTitleId === title.id ? 'selected' : ''}`}\r\n              onClick={() => handleTitleSelect(title.id)}\r\n              style={{ cursor: 'pointer', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}\r\n            >\r\n              <p>{title.title}</p>\r\n              <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem' }}>\r\n                <div className=\"status-badge\" data-status={getOverallExpenseTitleStatus(title.id)}>\r\n                  {STATUS_OPTIONS.find(([value]) => value === getOverallExpenseTitleStatus(title.id))?.[1]}\r\n                </div>\r\n                {!isAdmin && getOverallExpenseTitleStatus(title.id) === 'PENDING' && (\r\n                  <button\r\n                    className=\"btn btn-secondary\"\r\n                    style={{ marginLeft: '0.5rem', background: '#888', color: '#fff' }}\r\n                    onClick={async e => {\r\n                      e.stopPropagation();\r\n                      try {\r\n                        const token = localStorage.getItem('token');\r\n                        const csrftoken = getCookie('csrftoken');\r\n                        // Find the first expense form for this title\r\n                        const expenseForm = expenses.find(exp => exp.expense_title?.id === title.id);\r\n                        if (!expenseForm) {\r\n                          setError('No expense form found to send for approval.');\r\n                          return;\r\n                        }\r\n                        await axios.post(`/api/expense-forms/${expenseForm.id}/send_for_approval/`, {}, {\r\n                          headers: {\r\n                            'X-CSRFToken': csrftoken,\r\n                            'Authorization': `Bearer ${token}`,\r\n                            'Content-Type': 'application/json'\r\n                          }\r\n                        });\r\n                        await refreshAllData();\r\n                      } catch (err) {\r\n                        setError('Failed to send for approval. Please try again.');\r\n                      }\r\n                    }}\r\n                  >\r\n                    Send for Approval\r\n                  </button>\r\n                )}\r\n                {!isAdmin && (\r\n                  <button\r\n                    className=\"btn btn-copy\"\r\n                    style={{ marginLeft: '0.5rem' }}\r\n                    onClick={e => {\r\n                      e.stopPropagation();\r\n                      setCopyModalForTitle(title.id);\r\n                      setCopyNewTitle('');\r\n                      setCopyError('');\r\n                    }}\r\n                  >\r\n                    📋 Copy\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {copyModalForTitle && (\r\n        <div className=\"status-message-callout\">\r\n          <div className=\"callout-content\">\r\n            <h3>Copy Expense</h3>\r\n            <div className=\"form-group\" style={{ width: '100%' }}>\r\n              <label>New Expense Title</label>\r\n              <input\r\n                type=\"text\"\r\n                value={copyNewTitle}\r\n                onChange={e => setCopyNewTitle(e.target.value)}\r\n                placeholder=\"Enter new expense title\"\r\n              />\r\n            </div>\r\n            {copyError && <div className=\"error-message\">{copyError}</div>}\r\n            <div className=\"form-actions\" style={{ justifyContent: 'center' }}>\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={async () => {\r\n                  if (!copyNewTitle.trim()) {\r\n                    setCopyError('Please enter a new title');\r\n                    return;\r\n                  }\r\n                  setCopying(true);\r\n                  setCopyError('');\r\n                  let failedForms = [];\r\n                  try {\r\n                    const token = localStorage.getItem('token');\r\n                    const csrftoken = getCookie('csrftoken');\r\n                    // 1. Create new title\r\n                    const titleResponse = await axios.post('/api/expense-titles/', {\r\n                      title: copyNewTitle.trim()\r\n                    }, {\r\n                      headers: {\r\n                        'X-CSRFToken': csrftoken,\r\n                        'Authorization': `Bearer ${token}`,\r\n                        'Content-Type': 'application/json'\r\n                      }\r\n                    });\r\n                    const newTitleId = titleResponse.data.id;\r\n                    // 2. Get all forms from source title\r\n                    const sourceForms = expenses.filter(exp => exp.expense_title?.id === copyModalForTitle);\r\n                    // 3. Copy all forms to new title, including attachments\r\n                    await Promise.all(sourceForms.map(async (form) => {\r\n                      const formData = new FormData();\r\n                      formData.append('master_group', form.master_group);\r\n                      formData.append('subgroup', form.subgroup);\r\n                      formData.append('amount', form.amount);\r\n                      formData.append('currency', form.currency);\r\n                      formData.append('date', form.date);\r\n                      formData.append('expense_title_id', newTitleId);\r\n                      formData.append('status', 'PENDING');\r\n                      formData.append('comments', '');\r\n                      let attachmentSuccess = 0;\r\n                      if (form.attachments && form.attachments.length > 0) {\r\n                        await Promise.all(form.attachments.map(async (att) => {\r\n                          try {\r\n                            // Use backend proxy endpoint instead of direct OneDrive URL\r\n                            const originalFileName = att.url.split('/').pop();\r\n                            const safeFilename = encodeURIComponent(originalFileName);\r\n                            const safeTitle = encodeURIComponent(form.expense_title.title || '');\r\n                            const downloadUrl = `/api/attachments/${safeTitle}/${safeFilename}`;\r\n                            const response = await fetch(downloadUrl, {\r\n                              method: 'GET',\r\n                              headers: {\r\n                                Authorization: `Token ${token}`,\r\n                              },\r\n                              credentials: 'include',\r\n                            });\r\n                            if (!response.ok) throw new Error('Attachment download failed from backend');\r\n                            const blob = await response.blob();\r\n                            formData.append('attachments', blob, originalFileName);\r\n                            attachmentSuccess++;\r\n                          } catch (err) {\r\n                            console.error('Failed to copy attachment:', err);\r\n                          }\r\n                        }));\r\n                      }\r\n                      // If there were attachments but all failed, record this form\r\n                      if ((form.attachments && form.attachments.length > 0) && attachmentSuccess === 0) {\r\n                        failedForms.push(form);\r\n                      }\r\n                      // Submit the form with (possibly partial) attachments\r\n                      await axios.post('/api/expense-forms/', formData, {\r\n                        headers: {\r\n                          'X-CSRFToken': csrftoken,\r\n                          'Authorization': `Bearer ${token}`,\r\n                          'Content-Type': 'multipart/form-data'\r\n                        }\r\n                      });\r\n                    }));\r\n                    setCopyModalForTitle(null);\r\n                    setCopyNewTitle('');\r\n                    setCopyError(failedForms.length > 0 ? `Some forms were copied without attachments due to download errors. (${failedForms.length} forms affected)` : '');\r\n                    setCopying(false);\r\n                    navigate('/details', { state: { selectedTitleId: newTitleId } });\r\n                  } catch (error) {\r\n                    console.error('Copy error:', error);\r\n                    setCopyError('Failed to copy expense. Please try again.');\r\n                    setCopying(false);\r\n                  }\r\n                }}\r\n                disabled={copying || !copyNewTitle.trim()}\r\n              >\r\n                {copying ? 'Copying...' : 'Copy Expense'}\r\n              </button>\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={() => {\r\n                  setCopyModalForTitle(null);\r\n                  setCopyNewTitle('');\r\n                  setCopyError('');\r\n                }}\r\n                disabled={copying}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {showImportModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <h3>Import Expenses from File</h3>\r\n            {importError && <div className=\"error-message\">{importError}</div>}\r\n            <div className=\"form-group\">\r\n              <label>New Expense Title</label>\r\n              <input\r\n                type=\"text\"\r\n                value={importTitle}\r\n                onChange={e => setImportTitle(e.target.value)}\r\n                placeholder=\"Enter title for imported expenses\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Select File to Import</label>\r\n              <input\r\n                type=\"file\"\r\n                className=\"file-input\"\r\n                accept=\".csv,.xlsx,.json,.xml\"\r\n                onChange={e => setImportFile(e.target.files[0])}\r\n              />\r\n            </div>\r\n            <div className=\"form-actions\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={handleImportFile}\r\n                disabled={importing || !importTitle.trim() || !importFile}\r\n              >\r\n                {importing ? 'Importing...' : 'Import'}\r\n              </button>\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={() => {\r\n                  setShowImportModal(false);\r\n                  setImportTitle('');\r\n                  setImportFile(null);\r\n                  setImportError('');\r\n                }}\r\n                disabled={importing}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}