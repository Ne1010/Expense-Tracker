{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neha\\\\OneDrive\\\\Desktop\\\\Billing-Site\\\\frontend\\\\src\\\\components\\\\DetailsScreen.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport './styles.css';\nimport logoImage from '../logo.jpg';\nimport ExpenseForm from './ExpenseForm';\nfunction getCookie(name) {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      if (cookie.startsWith(name + '=')) {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\nconst STATUS_OPTIONS = [['PENDING', 'Pending'], ['APPROVED', 'Approved'], ['REJECTED', 'Rejected']];\nconst MASTER_GROUPS = [['TRAVEL', 'Travel'], ['OFFICE_SUPPLIES', 'Office Supplies'], ['UTILITIES', 'Utilities']];\nconst CURRENCIES = [['USD', 'USD'], ['EUR', 'EUR'], ['GBP', 'GBP'], ['INR', 'INR']];\nconst SUBGROUPS = {\n  'TRAVEL': [['TICKET', 'Ticket Expense'], ['FOOD', 'Food Expense'], ['HOSPITALITY', 'Hospitality Expense']],\n  'OFFICE_SUPPLIES': [['EQUIPMENT', 'Equipment'], ['STATIONERY', 'Stationery']],\n  'UTILITIES': [['INTERNET', 'Internet'], ['ELECTRICITY', 'Electricity']]\n};\nconst DetailsScreen = () => {\n  var _location$state;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [expenses, setExpenses] = useState([]);\n  const [expenseTitles, setExpenseTitles] = useState([]);\n  const [selectedTitleId, setSelectedTitleId] = useState(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.selectedTitleId) || null);\n  const [pendingEdits, setPendingEdits] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [titleStatus, setTitleStatus] = useState({\n    status: 'PENDING',\n    comments: ''\n  });\n  const [searchQuery, setSearchQuery] = useState('');\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [searchResults, setSearchResults] = useState([]);\n  const [editingExpense, setEditingExpense] = useState(null);\n  const [newTitle, setNewTitle] = useState('');\n  const [showCopyOptions, setShowCopyOptions] = useState(false);\n  const [copySourceTitleId, setCopySourceTitleId] = useState(null);\n  const [copyForms, setCopyForms] = useState(true);\n  const [showExpenseForm, setShowExpenseForm] = useState(false);\n  const [expandedExpenses, setExpandedExpenses] = useState([]);\n  const [showCommentsError, setShowCommentsError] = useState(false);\n  const [isUpdatingStatus, setIsUpdatingStatus] = useState(false);\n  const getLatestFormStatusAndComments = titleId => {\n    const titleForms = expenses.filter(e => {\n      var _e$expense_title;\n      return ((_e$expense_title = e.expense_title) === null || _e$expense_title === void 0 ? void 0 : _e$expense_title.id) === titleId;\n    });\n    if (titleForms.length === 0) {\n      return {\n        status: 'PENDING',\n        comments: ''\n      };\n    }\n    const latestForm = titleForms.sort((a, b) => new Date(b.updated_at || b.created_at) - new Date(a.updated_at || a.created_at))[0];\n    return {\n      status: latestForm.status || 'PENDING',\n      comments: latestForm.comments || ''\n    };\n  };\n  useEffect(() => {\n    const isUserAdmin = localStorage.getItem('username') === 'admin';\n    setIsAdmin(isUserAdmin);\n    localStorage.setItem('isAdmin', isUserAdmin);\n    fetchData(selectedTitleId);\n  }, [selectedTitleId]);\n  useEffect(() => {\n    if (selectedTitleId) {\n      const {\n        status,\n        comments\n      } = getLatestFormStatusAndComments(selectedTitleId);\n      setTitleStatus({\n        status: status,\n        comments: comments\n      });\n    } else {\n      setTitleStatus({\n        status: 'PENDING',\n        comments: ''\n      });\n    }\n  }, [selectedTitleId, expenses]);\n  const fetchData = async (titleId = null) => {\n    try {\n      setLoading(true);\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('Authentication token not found. Please log in again.');\n        navigate('/login');\n        return;\n      }\n      const config = {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        withCredentials: true\n      };\n\n      // Fetch expenses\n      const expensesUrl = titleId ? `/api/expense-forms/?title_id=${titleId}` : '/api/expense-forms/';\n      const expensesResponse = await axios.get(expensesUrl, config);\n\n      // Process attachments to handle backend corruption\n      const processedExpenses = expensesResponse.data.map(expense => {\n        let cleanedAttachment = expense.attachment;\n        if (typeof expense.attachment === 'string') {\n          let attachmentToParse = expense.attachment;\n          // If it looks like a URL-encoded JSON, decode it first\n          if (attachmentToParse.includes('%7B') && attachmentToParse.includes('%7D')) {\n            try {\n              attachmentToParse = decodeURIComponent(attachmentToParse);\n            } catch (e) {\n              console.warn('Failed to decode attachment URL component:', e);\n            }\n          }\n          try {\n            const parsedAttachment = JSON.parse(attachmentToParse.replace(/'/g, '\"'));\n            if (parsedAttachment && parsedAttachment.success && parsedAttachment.web_url) {\n              cleanedAttachment = parsedAttachment.web_url;\n            } else if (parsedAttachment && parsedAttachment.error) {\n              cleanedAttachment = null; // Backend returned an error in attachment field\n            }\n          } catch (e) {\n            // If parsing fails, it's likely a malformed URL or simple string\n            if (attachmentToParse.includes(\"{'success': False\") || attachmentToParse.includes(\"itemNotFound\")) {\n              cleanedAttachment = null; // Explicitly handle the corrupted string\n            } else if (attachmentToParse.startsWith('http') && !attachmentToParse.includes(' ')) {\n              // If it's a valid URL but not parsable JSON, keep it as is\n              cleanedAttachment = attachmentToParse;\n            } else {\n              // Fallback for unexpected formats, set to null or original\n              cleanedAttachment = null;\n            }\n          }\n        }\n        return {\n          ...expense,\n          attachment: cleanedAttachment\n        };\n      });\n      setExpenses(processedExpenses);\n\n      // Fetch titles\n      const titlesResponse = await axios.get('/api/expense-titles/', config);\n      setExpenseTitles(titlesResponse.data);\n      setLoading(false);\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.error('Error fetching data:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n        handleLogout();\n      } else {\n        setError('Failed to fetch data');\n      }\n      setLoading(false);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('isAdmin');\n    localStorage.removeItem('username');\n    navigate('/login');\n  };\n  const handleViewAttachment = async expense => {\n    if (!expense.attachment) return;\n    try {\n      // Base OneDrive folder URL\n      const baseOneDriveUrl = 'https://appglide-my.sharepoint.com/:f:/g/personal/nehas_appglide_io/EuH_826LZ8BPuCr3EQWdilEB1zKyzbc86cJiIO-G6EgjJg?e=T6IYng';\n\n      // Extract expense title from the attachment path\n      // The path format is \"expense_title/filename\"\n      const pathParts = expense.attachment.split('/');\n      if (pathParts.length < 2) {\n        throw new Error('Invalid attachment path format');\n      }\n      const expenseTitle = pathParts[0];\n\n      // Sanitize the expense title for URL\n      const sanitizedTitle = expenseTitle.replace(/[<>:\"/\\\\|?*]/g, '_') // Replace invalid characters\n      .trim().replace(/\\s+/g, '_'); // Replace spaces with underscores\n\n      // Construct the full URL with the expense title as a subfolder\n      const oneDriveUrl = `${baseOneDriveUrl}/${sanitizedTitle}`;\n\n      // Open in new tab\n      window.open(oneDriveUrl, '_blank', 'noopener,noreferrer');\n    } catch (error) {\n      console.error('Error opening OneDrive folder:', error);\n      setError('Failed to open OneDrive folder. Please try again.');\n    }\n  };\n  const username = localStorage.getItem('username');\n  const showCopyButton = true;\n  const handleTitleSelect = titleId => {\n    setSelectedTitleId(titleId);\n    setPendingEdits({});\n    setExpandedExpenses([]);\n    fetchData(titleId);\n  };\n  const selectedTitle = expenseTitles.find(title => title.id === selectedTitleId);\n  const filteredExpenses = selectedTitleId ? expenses.filter(expense => expense.expense_title && expense.expense_title.id === selectedTitleId) : expenses;\n  const handleSearch = e => {\n    const query = e.target.value.toLowerCase().trim();\n    setSearchQuery(query);\n    if (!query) {\n      setSearchResults([]);\n      setShowSuggestions(false);\n      return;\n    }\n\n    // Search in expense titles\n    const titleResults = expenseTitles.filter(title => title.title.toLowerCase().includes(query)).map(title => ({\n      type: 'title',\n      id: title.id,\n      title: title.title,\n      displayText: `Title: ${title.title}`\n    }));\n\n    // Search in expenses for status, master group, and subgroup\n    const expenseResults = expenses.filter(expense => {\n      var _MASTER_GROUPS$find, _SUBGROUPS$expense$ma, _SUBGROUPS$expense$ma2, _STATUS_OPTIONS$find, _expense$amount, _expense$date, _expense$currency;\n      const masterGroupMatch = (_MASTER_GROUPS$find = MASTER_GROUPS.find(([value]) => value === expense.master_group)) === null || _MASTER_GROUPS$find === void 0 ? void 0 : _MASTER_GROUPS$find[1].toLowerCase().includes(query);\n      const subgroupMatch = (_SUBGROUPS$expense$ma = SUBGROUPS[expense.master_group]) === null || _SUBGROUPS$expense$ma === void 0 ? void 0 : (_SUBGROUPS$expense$ma2 = _SUBGROUPS$expense$ma.find(([value]) => value === expense.subgroup)) === null || _SUBGROUPS$expense$ma2 === void 0 ? void 0 : _SUBGROUPS$expense$ma2[1].toLowerCase().includes(query);\n      const statusMatch = (_STATUS_OPTIONS$find = STATUS_OPTIONS.find(([value]) => value === expense.status)) === null || _STATUS_OPTIONS$find === void 0 ? void 0 : _STATUS_OPTIONS$find[1].toLowerCase().includes(query);\n      const amountMatch = (_expense$amount = expense.amount) === null || _expense$amount === void 0 ? void 0 : _expense$amount.toString().includes(query);\n      const dateMatch = (_expense$date = expense.date) === null || _expense$date === void 0 ? void 0 : _expense$date.toLowerCase().includes(query);\n      const currencyMatch = (_expense$currency = expense.currency) === null || _expense$currency === void 0 ? void 0 : _expense$currency.toLowerCase().includes(query);\n      return masterGroupMatch || subgroupMatch || statusMatch || amountMatch || dateMatch || currencyMatch;\n    }).map(expense => {\n      var _expense$expense_titl, _MASTER_GROUPS$find2, _SUBGROUPS$expense$ma3, _SUBGROUPS$expense$ma4, _STATUS_OPTIONS$find2;\n      return {\n        type: 'expense',\n        id: expense.id,\n        titleId: (_expense$expense_titl = expense.expense_title) === null || _expense$expense_titl === void 0 ? void 0 : _expense$expense_titl.id,\n        displayText: `${(_MASTER_GROUPS$find2 = MASTER_GROUPS.find(([value]) => value === expense.master_group)) === null || _MASTER_GROUPS$find2 === void 0 ? void 0 : _MASTER_GROUPS$find2[1]} - ${(_SUBGROUPS$expense$ma3 = SUBGROUPS[expense.master_group]) === null || _SUBGROUPS$expense$ma3 === void 0 ? void 0 : (_SUBGROUPS$expense$ma4 = _SUBGROUPS$expense$ma3.find(([value]) => value === expense.subgroup)) === null || _SUBGROUPS$expense$ma4 === void 0 ? void 0 : _SUBGROUPS$expense$ma4[1]} (${(_STATUS_OPTIONS$find2 = STATUS_OPTIONS.find(([value]) => value === expense.status)) === null || _STATUS_OPTIONS$find2 === void 0 ? void 0 : _STATUS_OPTIONS$find2[1]}) - ${expense.amount} ${expense.currency}`\n      };\n    });\n\n    // Combine and deduplicate results\n    const combinedResults = [...titleResults, ...expenseResults];\n    const uniqueResults = Array.from(new Map(combinedResults.map(item => [item.id, item])).values());\n    setSearchResults(uniqueResults);\n    setShowSuggestions(true);\n  };\n  const handleSearchBlur = () => {\n    setTimeout(() => {\n      setShowSuggestions(false);\n    }, 200);\n  };\n  const handleSuggestionClick = result => {\n    if (result.type === 'title') {\n      setSelectedTitleId(result.id);\n    } else {\n      setSelectedTitleId(result.titleId);\n    }\n    setSearchQuery('');\n    setShowSuggestions(false);\n  };\n  const validateToken = async token => {\n    try {\n      // Use the expense-titles endpoint to validate token\n      const response = await axios.get('/api/expense-titles/', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      return true; // If we get here, the token is valid\n    } catch (error) {\n      var _error$response3;\n      if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n        return false; // Token is invalid\n      }\n      throw error; // Re-throw other errors\n    }\n  };\n  const handleTitleStatusUpdate = async () => {\n    if (!selectedTitleId || !titleStatus.status) return;\n    setIsUpdatingStatus(true);\n    const token = localStorage.getItem('token');\n    const csrftoken = getCookie('csrftoken');\n    try {\n      // Update all related expense forms\n      const formsToUpdate = expenses.filter(expense => {\n        var _expense$expense_titl2;\n        return ((_expense$expense_titl2 = expense.expense_title) === null || _expense$expense_titl2 === void 0 ? void 0 : _expense$expense_titl2.id) === selectedTitleId;\n      });\n      const updatedExpenses = await Promise.all(formsToUpdate.map(async expense => {\n        const response = await axios.patch(`/api/expense-forms/${expense.id}/update_status/`, {\n          status: titleStatus.status,\n          comments: titleStatus.comments || ''\n        }, {\n          headers: {\n            'X-CSRFToken': csrftoken,\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n\n        // Preserve original attachment data, as backend might corrupt it\n        return {\n          ...response.data,\n          attachment: expense.attachment\n        };\n      }));\n\n      // Update state with backend response, preserving attachment\n      setExpenses(prev => prev.map(expense => {\n        const updated = updatedExpenses.find(e => e.id === expense.id);\n        if (updated) {\n          return {\n            ...updated,\n            attachment: expense.attachment || updated.attachment\n          };\n        }\n        return expense;\n      }));\n\n      // Force refresh of data to ensure consistency and trigger useEffect\n      await fetchData(selectedTitleId);\n      setError('');\n    } catch (error) {\n      var _error$response4, _error$response5;\n      console.error('Update error:', ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n      if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 401) {\n        handleLogout();\n      } else {\n        setError('Failed to update status. Please try again.');\n      }\n    } finally {\n      setIsUpdatingStatus(false);\n    }\n  };\n  const handleAccept = async () => {\n    if (!titleStatus.comments.trim()) {\n      setShowCommentsError(true);\n      return;\n    }\n\n    // Optimistic UI update\n    setTitleStatus(prev => ({\n      ...prev,\n      status: 'APPROVED'\n    }));\n    await handleTitleStatusUpdate();\n  };\n  const handleReject = async () => {\n    if (!titleStatus.comments.trim()) {\n      setShowCommentsError(true);\n      return;\n    }\n\n    // Optimistic UI update\n    setTitleStatus(prev => ({\n      ...prev,\n      status: 'REJECTED'\n    }));\n    await handleTitleStatusUpdate();\n  };\n  const handleEditExpense = expense => {\n    setEditingExpense(expense.id);\n    setPendingEdits({\n      [expense.id]: {\n        amount: expense.amount,\n        date: expense.date,\n        master_group: expense.master_group,\n        subgroup: expense.subgroup,\n        status: 'PENDING',\n        comments: ''\n      }\n    });\n  };\n  const handleMasterGroupChange = (expenseId, value) => {\n    setPendingEdits(prev => ({\n      ...prev,\n      [expenseId]: {\n        ...prev[expenseId],\n        master_group: value,\n        subgroup: ''\n      }\n    }));\n  };\n  const handleCancelEdit = () => {\n    setEditingExpense(null);\n    setPendingEdits({});\n  };\n  const handleSaveEdit = async expenseId => {\n    const csrftoken = getCookie('csrftoken');\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.patch(`/api/expense-forms/${expenseId}/`, {\n        ...pendingEdits[expenseId],\n        status: 'PENDING',\n        comments: ''\n      }, {\n        headers: {\n          'X-CSRFToken': csrftoken,\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setExpenses(prevExpenses => prevExpenses.map(expense => expense.id === expenseId ? {\n        ...expense,\n        ...response.data\n      } : expense));\n      setEditingExpense(null);\n      setPendingEdits({});\n      setError('');\n    } catch (error) {\n      var _error$response6;\n      console.error('Error updating expense:', ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n      setError('Failed to update expense. Please try again.');\n    }\n  };\n  const handleAddTitle = async () => {\n    if (!newTitle.trim()) return;\n    const csrftoken = getCookie('csrftoken');\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.post('/api/expense-titles/', {\n        title: newTitle\n      }, {\n        headers: {\n          'X-CSRFToken': csrftoken,\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setExpenseTitles(prev => [...prev, response.data]);\n      setNewTitle('');\n      setError('');\n    } catch (error) {\n      var _error$response7;\n      console.error('Error adding title:', ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n      setError('Failed to add title. Please try again.');\n    }\n  };\n  const handleCopyExpense = async () => {\n    if (!newTitle.trim() || !copySourceTitleId) return;\n    const csrftoken = getCookie('csrftoken');\n    const token = localStorage.getItem('token');\n    try {\n      const titleResponse = await axios.post('/api/expense-titles/', {\n        title: newTitle\n      }, {\n        headers: {\n          'X-CSRFToken': csrftoken,\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setExpenseTitles(prev => [...prev, titleResponse.data]);\n      setNewTitle('');\n      setError('');\n    } catch (error) {\n      var _error$response8;\n      console.error('Error copying expense:', ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error.message);\n      setError('Failed to copy expense. Please try again.');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"details-screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 5\n    }\n  });\n};\nexport default DetailsScreen;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","axios","logoImage","ExpenseForm","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","startsWith","decodeURIComponent","substring","STATUS_OPTIONS","MASTER_GROUPS","CURRENCIES","SUBGROUPS","DetailsScreen","_location$state","navigate","location","expenses","setExpenses","expenseTitles","setExpenseTitles","selectedTitleId","setSelectedTitleId","state","pendingEdits","setPendingEdits","loading","setLoading","error","setError","isAdmin","setIsAdmin","titleStatus","setTitleStatus","status","comments","searchQuery","setSearchQuery","showSuggestions","setShowSuggestions","searchResults","setSearchResults","editingExpense","setEditingExpense","newTitle","setNewTitle","showCopyOptions","setShowCopyOptions","copySourceTitleId","setCopySourceTitleId","copyForms","setCopyForms","showExpenseForm","setShowExpenseForm","expandedExpenses","setExpandedExpenses","showCommentsError","setShowCommentsError","isUpdatingStatus","setIsUpdatingStatus","getLatestFormStatusAndComments","titleId","titleForms","filter","e","_e$expense_title","expense_title","id","latestForm","sort","a","b","Date","updated_at","created_at","isUserAdmin","localStorage","getItem","setItem","fetchData","token","config","headers","withCredentials","expensesUrl","expensesResponse","get","processedExpenses","data","map","expense","cleanedAttachment","attachment","attachmentToParse","includes","console","warn","parsedAttachment","JSON","parse","replace","success","web_url","titlesResponse","_error$response","_error$response2","response","message","handleLogout","removeItem","handleViewAttachment","baseOneDriveUrl","pathParts","Error","expenseTitle","sanitizedTitle","oneDriveUrl","window","open","username","showCopyButton","handleTitleSelect","selectedTitle","find","title","filteredExpenses","handleSearch","query","target","value","toLowerCase","titleResults","type","displayText","expenseResults","_MASTER_GROUPS$find","_SUBGROUPS$expense$ma","_SUBGROUPS$expense$ma2","_STATUS_OPTIONS$find","_expense$amount","_expense$date","_expense$currency","masterGroupMatch","master_group","subgroupMatch","subgroup","statusMatch","amountMatch","amount","toString","dateMatch","date","currencyMatch","currency","_expense$expense_titl","_MASTER_GROUPS$find2","_SUBGROUPS$expense$ma3","_SUBGROUPS$expense$ma4","_STATUS_OPTIONS$find2","combinedResults","uniqueResults","Array","from","Map","item","values","handleSearchBlur","setTimeout","handleSuggestionClick","result","validateToken","_error$response3","handleTitleStatusUpdate","csrftoken","formsToUpdate","_expense$expense_titl2","updatedExpenses","Promise","all","patch","prev","updated","_error$response4","_error$response5","handleAccept","handleReject","handleEditExpense","handleMasterGroupChange","expenseId","handleCancelEdit","handleSaveEdit","prevExpenses","_error$response6","handleAddTitle","post","_error$response7","handleCopyExpense","titleResponse","_error$response8","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Neha/OneDrive/Desktop/Billing-Site/frontend/src/components/DetailsScreen.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport './styles.css';\nimport logoImage from '../logo.jpg';\nimport ExpenseForm from './ExpenseForm';\n\nfunction getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            if (cookie.startsWith(name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nconst STATUS_OPTIONS = [\n  ['PENDING', 'Pending'],\n  ['APPROVED', 'Approved'],\n  ['REJECTED', 'Rejected']\n];\n\nconst MASTER_GROUPS = [\n  ['TRAVEL', 'Travel'],\n  ['OFFICE_SUPPLIES', 'Office Supplies'],\n  ['UTILITIES', 'Utilities'],\n];\n\nconst CURRENCIES = [\n  ['USD', 'USD'],\n  ['EUR', 'EUR'],\n  ['GBP', 'GBP'],\n  ['INR', 'INR'],\n];\n\nconst SUBGROUPS = {\n  'TRAVEL': [\n    ['TICKET', 'Ticket Expense'],\n    ['FOOD', 'Food Expense'],\n    ['HOSPITALITY', 'Hospitality Expense'],\n  ],\n  'OFFICE_SUPPLIES': [\n    ['EQUIPMENT', 'Equipment'],\n    ['STATIONERY', 'Stationery'],\n  ],\n  'UTILITIES': [\n    ['INTERNET', 'Internet'],\n    ['ELECTRICITY', 'Electricity'],\n  ],\n};\n\nconst DetailsScreen = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [expenses, setExpenses] = useState([]);\n  const [expenseTitles, setExpenseTitles] = useState([]);\n  const [selectedTitleId, setSelectedTitleId] = useState(location.state?.selectedTitleId || null);\n  const [pendingEdits, setPendingEdits] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [titleStatus, setTitleStatus] = useState({\n    status: 'PENDING',\n    comments: ''\n  });\n  const [searchQuery, setSearchQuery] = useState('');\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [searchResults, setSearchResults] = useState([]);\n  const [editingExpense, setEditingExpense] = useState(null);\n  const [newTitle, setNewTitle] = useState('');\n  const [showCopyOptions, setShowCopyOptions] = useState(false);\n  const [copySourceTitleId, setCopySourceTitleId] = useState(null);\n  const [copyForms, setCopyForms] = useState(true);\n  const [showExpenseForm, setShowExpenseForm] = useState(false);\n  const [expandedExpenses, setExpandedExpenses] = useState([]);\n  const [showCommentsError, setShowCommentsError] = useState(false);\n  const [isUpdatingStatus, setIsUpdatingStatus] = useState(false);\n\n  const getLatestFormStatusAndComments = (titleId) => {\n    const titleForms = expenses.filter(e => e.expense_title?.id === titleId);\n    if (titleForms.length === 0) {\n      return { status: 'PENDING', comments: '' };\n    }\n    \n    const latestForm = titleForms.sort((a, b) => \n      new Date(b.updated_at || b.created_at) - new Date(a.updated_at || a.created_at)\n    )[0];\n    \n    return { status: latestForm.status || 'PENDING', comments: latestForm.comments || '' };\n  };\n\n  useEffect(() => {\n    const isUserAdmin = localStorage.getItem('username') === 'admin';\n    setIsAdmin(isUserAdmin);\n    localStorage.setItem('isAdmin', isUserAdmin);\n    fetchData(selectedTitleId);\n  }, [selectedTitleId]);\n\n  useEffect(() => {\n    if (selectedTitleId) {\n      const { status, comments } = getLatestFormStatusAndComments(selectedTitleId);\n      setTitleStatus({\n        status: status,\n        comments: comments\n      });\n    } else {\n      setTitleStatus({\n        status: 'PENDING',\n        comments: ''\n      });\n    }\n  }, [selectedTitleId, expenses]);\n\n  const fetchData = async (titleId = null) => {\n    try {\n      setLoading(true);\n      const token = localStorage.getItem('token');\n      \n      if (!token) {\n        setError('Authentication token not found. Please log in again.');\n        navigate('/login');\n        return;\n      }\n\n      const config = {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        withCredentials: true\n      };\n\n      // Fetch expenses\n      const expensesUrl = titleId ? `/api/expense-forms/?title_id=${titleId}` : '/api/expense-forms/';\n      const expensesResponse = await axios.get(expensesUrl, config);\n      \n      // Process attachments to handle backend corruption\n      const processedExpenses = expensesResponse.data.map(expense => {\n        let cleanedAttachment = expense.attachment;\n        if (typeof expense.attachment === 'string') {\n          let attachmentToParse = expense.attachment;\n          // If it looks like a URL-encoded JSON, decode it first\n          if (attachmentToParse.includes('%7B') && attachmentToParse.includes('%7D')) {\n            try {\n              attachmentToParse = decodeURIComponent(attachmentToParse);\n            } catch (e) {\n              console.warn('Failed to decode attachment URL component:', e);\n            }\n          }\n\n          try {\n            const parsedAttachment = JSON.parse(attachmentToParse.replace(/'/g, '\"'));\n            if (parsedAttachment && parsedAttachment.success && parsedAttachment.web_url) {\n              cleanedAttachment = parsedAttachment.web_url;\n            } else if (parsedAttachment && parsedAttachment.error) {\n              cleanedAttachment = null; // Backend returned an error in attachment field\n            }\n          } catch (e) {\n            // If parsing fails, it's likely a malformed URL or simple string\n            if (attachmentToParse.includes(\"{'success': False\") || attachmentToParse.includes(\"itemNotFound\")) {\n              cleanedAttachment = null; // Explicitly handle the corrupted string\n            } else if (attachmentToParse.startsWith('http') && !attachmentToParse.includes(' ')) {\n              // If it's a valid URL but not parsable JSON, keep it as is\n              cleanedAttachment = attachmentToParse;\n            } else {\n              // Fallback for unexpected formats, set to null or original\n              cleanedAttachment = null; \n            }\n          }\n        }\n        return { ...expense, attachment: cleanedAttachment };\n      });\n\n      setExpenses(processedExpenses);\n\n      // Fetch titles\n      const titlesResponse = await axios.get('/api/expense-titles/', config);\n      setExpenseTitles(titlesResponse.data);\n\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching data:', error.response?.data || error.message);\n      if (error.response?.status === 401) {\n        handleLogout();\n      } else {\n        setError('Failed to fetch data');\n      }\n      setLoading(false);\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('isAdmin');\n    localStorage.removeItem('username');\n    navigate('/login');\n  };\n\n  const handleViewAttachment = async (expense) => {\n    if (!expense.attachment) return;\n\n    try {\n      // Base OneDrive folder URL\n      const baseOneDriveUrl = 'https://appglide-my.sharepoint.com/:f:/g/personal/nehas_appglide_io/EuH_826LZ8BPuCr3EQWdilEB1zKyzbc86cJiIO-G6EgjJg?e=T6IYng';\n      \n      // Extract expense title from the attachment path\n      // The path format is \"expense_title/filename\"\n      const pathParts = expense.attachment.split('/');\n      if (pathParts.length < 2) {\n        throw new Error('Invalid attachment path format');\n      }\n      \n      const expenseTitle = pathParts[0];\n      \n      // Sanitize the expense title for URL\n      const sanitizedTitle = expenseTitle\n        .replace(/[<>:\"/\\\\|?*]/g, '_') // Replace invalid characters\n        .trim()\n        .replace(/\\s+/g, '_'); // Replace spaces with underscores\n      \n      // Construct the full URL with the expense title as a subfolder\n      const oneDriveUrl = `${baseOneDriveUrl}/${sanitizedTitle}`;\n      \n      // Open in new tab\n      window.open(oneDriveUrl, '_blank', 'noopener,noreferrer');\n    } catch (error) {\n      console.error('Error opening OneDrive folder:', error);\n      setError('Failed to open OneDrive folder. Please try again.');\n    }\n  };\n\n  const username = localStorage.getItem('username');\n  const showCopyButton = true;\n  \n  const handleTitleSelect = (titleId) => {\n    setSelectedTitleId(titleId);\n    setPendingEdits({});\n    setExpandedExpenses([]);\n    fetchData(titleId);\n  };\n\n  const selectedTitle = expenseTitles.find(title => title.id === selectedTitleId);\n  const filteredExpenses = selectedTitleId\n    ? expenses.filter(expense => expense.expense_title && expense.expense_title.id === selectedTitleId)\n    : expenses;\n\n  const handleSearch = (e) => {\n    const query = e.target.value.toLowerCase().trim();\n    setSearchQuery(query);\n    \n    if (!query) {\n      setSearchResults([]);\n      setShowSuggestions(false);\n      return;\n    }\n\n    // Search in expense titles\n    const titleResults = expenseTitles.filter(title =>\n      title.title.toLowerCase().includes(query)\n    ).map(title => ({\n      type: 'title',\n      id: title.id,\n      title: title.title,\n      displayText: `Title: ${title.title}`\n    }));\n\n    // Search in expenses for status, master group, and subgroup\n    const expenseResults = expenses.filter(expense => {\n      const masterGroupMatch = MASTER_GROUPS.find(([value]) => \n        value === expense.master_group\n      )?.[1].toLowerCase().includes(query);\n      \n      const subgroupMatch = SUBGROUPS[expense.master_group]?.find(([value]) => \n        value === expense.subgroup\n      )?.[1].toLowerCase().includes(query);\n      \n      const statusMatch = STATUS_OPTIONS.find(([value]) => \n        value === expense.status\n      )?.[1].toLowerCase().includes(query);\n\n      const amountMatch = expense.amount?.toString().includes(query);\n      const dateMatch = expense.date?.toLowerCase().includes(query);\n      const currencyMatch = expense.currency?.toLowerCase().includes(query);\n\n      return masterGroupMatch || subgroupMatch || statusMatch || amountMatch || dateMatch || currencyMatch;\n    }).map(expense => ({\n      type: 'expense',\n      id: expense.id,\n      titleId: expense.expense_title?.id,\n      displayText: `${MASTER_GROUPS.find(([value]) => value === expense.master_group)?.[1]} - ${\n        SUBGROUPS[expense.master_group]?.find(([value]) => value === expense.subgroup)?.[1]\n      } (${STATUS_OPTIONS.find(([value]) => value === expense.status)?.[1]}) - ${expense.amount} ${expense.currency}`\n    }));\n\n    // Combine and deduplicate results\n    const combinedResults = [...titleResults, ...expenseResults];\n    const uniqueResults = Array.from(\n      new Map(combinedResults.map(item => [item.id, item])).values()\n    );\n\n    setSearchResults(uniqueResults);\n    setShowSuggestions(true);\n  };\n\n  const handleSearchBlur = () => {\n    setTimeout(() => {\n      setShowSuggestions(false);\n    }, 200);\n  };\n\n  const handleSuggestionClick = (result) => {\n    if (result.type === 'title') {\n      setSelectedTitleId(result.id);\n    } else {\n      setSelectedTitleId(result.titleId);\n    }\n    setSearchQuery('');\n    setShowSuggestions(false);\n  };\n\n  const validateToken = async (token) => {\n    try {\n      // Use the expense-titles endpoint to validate token\n      const response = await axios.get('/api/expense-titles/', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      return true; // If we get here, the token is valid\n    } catch (error) {\n      if (error.response?.status === 401) {\n        return false; // Token is invalid\n      }\n      throw error; // Re-throw other errors\n    }\n  };\n\n  const handleTitleStatusUpdate = async () => {\n    if (!selectedTitleId || !titleStatus.status) return;\n\n    setIsUpdatingStatus(true);\n    const token = localStorage.getItem('token');\n    const csrftoken = getCookie('csrftoken');\n    \n    try {\n      // Update all related expense forms\n      const formsToUpdate = expenses.filter(expense => \n        expense.expense_title?.id === selectedTitleId\n      );\n\n      const updatedExpenses = await Promise.all(\n        formsToUpdate.map(async (expense) => {\n          const response = await axios.patch(\n            `/api/expense-forms/${expense.id}/update_status/`,\n            {\n              status: titleStatus.status,\n              comments: titleStatus.comments || ''\n            },\n            {\n              headers: {\n                'X-CSRFToken': csrftoken,\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n              },\n              withCredentials: true\n            }\n          );\n          \n          // Preserve original attachment data, as backend might corrupt it\n          return { ...response.data, attachment: expense.attachment };\n        })\n      );\n\n      // Update state with backend response, preserving attachment\n      setExpenses(prev => \n        prev.map(expense => {\n          const updated = updatedExpenses.find(e => e.id === expense.id);\n          if (updated) {\n            return { ...updated, attachment: expense.attachment || updated.attachment };\n          }\n          return expense;\n        })\n      );\n\n      // Force refresh of data to ensure consistency and trigger useEffect\n      await fetchData(selectedTitleId);\n      setError('');\n    } catch (error) {\n      console.error('Update error:', error.response?.data || error.message);\n      if (error.response?.status === 401) {\n        handleLogout();\n      } else {\n        setError('Failed to update status. Please try again.');\n      }\n    } finally {\n      setIsUpdatingStatus(false);\n    }\n  };\n\n  const handleAccept = async () => {\n    if (!titleStatus.comments.trim()) {\n      setShowCommentsError(true);\n      return;\n    }\n\n    // Optimistic UI update\n    setTitleStatus(prev => ({\n      ...prev,\n      status: 'APPROVED'\n    }));\n\n    await handleTitleStatusUpdate();\n  };\n\n  const handleReject = async () => {\n    if (!titleStatus.comments.trim()) {\n      setShowCommentsError(true);\n      return;\n    }\n\n    // Optimistic UI update\n    setTitleStatus(prev => ({\n      ...prev,\n      status: 'REJECTED'\n    }));\n\n    await handleTitleStatusUpdate();\n  };\n\n  const handleEditExpense = (expense) => {\n    setEditingExpense(expense.id);\n    setPendingEdits({\n      [expense.id]: {\n        amount: expense.amount,\n        date: expense.date,\n        master_group: expense.master_group,\n        subgroup: expense.subgroup,\n        status: 'PENDING',\n        comments: ''\n      }\n    });\n  };\n\n  const handleMasterGroupChange = (expenseId, value) => {\n    setPendingEdits(prev => ({\n      ...prev,\n      [expenseId]: {\n        ...prev[expenseId],\n        master_group: value,\n        subgroup: ''\n      }\n    }));\n  };\n\n  const handleCancelEdit = () => {\n    setEditingExpense(null);\n    setPendingEdits({});\n  };\n\n  const handleSaveEdit = async (expenseId) => {\n    const csrftoken = getCookie('csrftoken');\n    const token = localStorage.getItem('token');\n    \n    try {\n      const response = await axios.patch(`/api/expense-forms/${expenseId}/`, \n        {\n          ...pendingEdits[expenseId],\n          status: 'PENDING',\n          comments: ''\n        },\n        {\n          headers: {\n            'X-CSRFToken': csrftoken,\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          },\n        }\n      );\n\n      setExpenses(prevExpenses => \n        prevExpenses.map(expense => \n          expense.id === expenseId \n            ? { ...expense, ...response.data }\n            : expense\n        )\n      );\n\n      setEditingExpense(null);\n      setPendingEdits({});\n      setError('');\n    } catch (error) {\n      console.error('Error updating expense:', error.response?.data || error.message);\n      setError('Failed to update expense. Please try again.');\n    }\n  };\n\n  const handleAddTitle = async () => {\n    if (!newTitle.trim()) return;\n\n    const csrftoken = getCookie('csrftoken');\n    const token = localStorage.getItem('token');\n    \n    try {\n      const response = await axios.post('/api/expense-titles/', {\n        title: newTitle\n      }, {\n        headers: {\n          'X-CSRFToken': csrftoken,\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      setExpenseTitles(prev => [...prev, response.data]);\n      setNewTitle('');\n      setError('');\n    } catch (error) {\n      console.error('Error adding title:', error.response?.data || error.message);\n      setError('Failed to add title. Please try again.');\n    }\n  };\n\n  const handleCopyExpense = async () => {\n    if (!newTitle.trim() || !copySourceTitleId) return;\n\n    const csrftoken = getCookie('csrftoken');\n    const token = localStorage.getItem('token');\n    \n    try {\n      const titleResponse = await axios.post('/api/expense-titles/', {\n        title: newTitle\n      }, {\n        headers: {\n          'X-CSRFToken': csrftoken,\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      setExpenseTitles(prev => [...prev, titleResponse.data]);\n      setNewTitle('');\n      setError('');\n    } catch (error) {\n      console.error('Error copying expense:', error.response?.data || error.message);\n      setError('Failed to copy expense. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"details-screen\">\n      {/* Rest of the component content */}\n    </div>\n  );\n};\n\nexport default DetailsScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}